#!/bin/bash

# ENV

# export USER variable regardless of sudo
export USER=$(whoami)

# Determine OS and Nix Type
case "$OSTYPE" in
  solaris*) export OS="Solaris" ;;
  darwin*)  export OS="macOS" ;; 
  linux*)   export OS="Linux" ;;
  bsd*)     export OS="BSD" ;;
  msys*)    export OS="Windows" ;;
  cygwin*)  export OS="Windows" ;;
  *)        export OS="unknown: $OSTYPE" ;;
esac

# Declare environmental variable $HOME per OS
[ "$OS" == "Linux" ] && export HOME="/home/$USER"
[ "$OS" == "macOS" ] && export HOME="/Users/$USER"

# Declare $DOTFILES directory
[ -d $HOME/projects/dotfiles ] && export DOTFILES="$HOME/projects/dotfiles"

# linuxbrew environment
# if [ "$OS" == "Linux" ]; then
   test -d "$HOME/.linuxbrew" && eval "$($HOME/.linuxbrew/bin/brew shellenv)"
   test -d "/home/linuxbrew/.linuxbrew" && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
# fi

# Set architecture-specific brew share path.
arch_name="$(uname -m)"
[ "${arch_name}" = "x86_64" ] && export share_path="/usr/local/share"
[ "${arch_name}" = "arm64" ] && export share_path="/opt/homebrew/share"

# Stop brew auto update
export HOMEBREW_AUTO_UPDATING=0

# Preferred editor for local and remote sessions
[ -n $SSH_CONNECTION ] && export EDITOR="vi"
[ "$OS" == "macOS" ] && export EDITOR="/Applications/MacVim.app"
[ "$OS" == "Linux" ] && export EDITOR="nvim"

# Allow Composer to use almost as much RAM as Chrome.
export COMPOSER_MEMORY_LIMIT=-1

# Tell homebrew to not autoupdate every single time I run it (just once a week).
export HOMEBREW_AUTO_UPDATE_SECS=604800

# help compilers find ruby
export LDFLAGS="-L/usr/local/opt/ruby/lib"
export CPPFLAGS="-I/usr/local/opt/ruby/include"

# gpg with yubikey setup
export GPG_TTY="$(tty)"
# check for macOS homebrew yubikey agent
command -v brew >/dev/null 2>&1 && export SSH_AUTH_SOCK="$(brew --prefix)/var/run/yubikey-agent.sock" || export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
gpgconf --launch gpg-agent
